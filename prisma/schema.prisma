// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  accounts          Account[]
  sessions          Session[]
  profile           Profile?
  careerAnalyses    CareerAnalysis[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  currentCareer     String?
  yearsOfExperience Int?
  education         String?
  skills            String[] @default([])
  interests         String[] @default([])
  bio               String?  @db.Text
  linkedinUrl       String?
  githubUrl         String?
  resumeUrl         String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model CareerAnalysis {
  id                String   @id @default(cuid())
  userId            String
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  currentCareer     String
  targetCareer      String
  matchPercentage   Int
  transferableSkills Json
  skillGaps         Json
  recommendations   Json?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Course {
  id                String   @id @default(cuid())
  title             String
  provider          String
  description       String   @db.Text
  url               String
  imageUrl          String?
  price             Float?
  duration          String?
  level             String?
  category          String
  tags              String[] @default([])
  rating            Float?
  reviewCount       Int?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
